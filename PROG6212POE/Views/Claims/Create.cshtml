@model PROG6212POE.Models.ViewModels.ClaimViewModel
@{
    ViewData["Title"] = "Submit Claim";
}

<h2>Submit Claim</h2>

@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger">
        @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
        {
            <div>@error.ErrorMessage</div>
        }
    </div>
}

<form asp-action="Create" enctype="multipart/form-data" method="post">
    <div class="mb-3">
        <label asp-for="HoursWorked" class="form-label"></label>
        <input asp-for="HoursWorked" class="form-control" />
        <span asp-validation-for="HoursWorked" class="text-danger"></span>
    </div>

    <div class="mb-3">
        <label asp-for="HourlyRate" class="form-label"></label>
        <input asp-for="HourlyRate" class="form-control" />
        <span asp-validation-for="HourlyRate" class="text-danger"></span>
    </div>

    <div class="mb-3">
        <label asp-for="Notes" class="form-label"></label>
        <textarea asp-for="Notes" class="form-control" rows="3"></textarea>
        <span asp-validation-for="Notes" class="text-danger"></span>
    </div>

    <div class="mb-3">
        <label asp-for="Document" class="form-label">Supporting Document</label>
        <input asp-for="Document" type="file" class="form-control" />
        <span class="form-text">Allowed types: .pdf, .docx, .xlsx. Max size: 5MB</span>
        <span asp-validation-for="Document" class="text-danger"></span>
    </div>

    <button type="submit" class="btn btn-success">
        <i class="bi bi-upload me-1"></i> Submit Claim
    </button>
    <a asp-action="Index" class="btn btn-secondary">Cancel</a>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
